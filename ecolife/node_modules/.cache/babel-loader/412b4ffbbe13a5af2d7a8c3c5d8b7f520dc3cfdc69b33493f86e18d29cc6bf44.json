{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andonija\\\\apps\\\\git\\\\EcoLife\\\\ecolife\\\\src\\\\ScrollPopup.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './ScrollPopup.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScrollPopup = () => {\n  _s();\n  const [showPopup, setShowPopup] = useState(false);\n  const [isClosed, setIsClosed] = useState(false); // State to track if the popup has been closed\n  const navigate = useNavigate();\n  const handleScroll = () => {\n    if (!isClosed && window.scrollY > 200) {\n      // Only show if not closed\n      setShowPopup(true);\n    } else {\n      setShowPopup(false);\n    }\n  };\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, [isClosed]);\n  const handleClick = () => {\n    navigate('/tracking'); // Update with your tracking page path\n  };\n  const handleClose = () => {\n    setIsClosed(true);\n    setShowPopup(false);\n  };\n  return showPopup && !isClosed ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scroll-popup\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"close-button\",\n      onClick: handleClose,\n      children: \"\\xD7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Want to find out how sustainable you are?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      className: \"popup-button\",\n      children: \"Visit our tracking page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this) : null;\n};\n_s(ScrollPopup, \"IVymXqP1ng4QjX2GZY9MJV1YunY=\", false, function () {\n  return [useNavigate];\n});\n_c = ScrollPopup;\nexport default ScrollPopup;\nvar _c;\n$RefreshReg$(_c, \"ScrollPopup\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","ScrollPopup","_s","showPopup","setShowPopup","isClosed","setIsClosed","navigate","handleScroll","window","scrollY","addEventListener","removeEventListener","handleClick","handleClose","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Andonija/apps/git/EcoLife/ecolife/src/ScrollPopup.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './ScrollPopup.css';\r\n\r\nconst ScrollPopup: React.FC = () => {\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [isClosed, setIsClosed] = useState(false); // State to track if the popup has been closed\r\n  const navigate = useNavigate();\r\n\r\n  const handleScroll = () => {\r\n    if (!isClosed && window.scrollY > 200) { // Only show if not closed\r\n      setShowPopup(true);\r\n    } else {\r\n      setShowPopup(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, [isClosed]);\r\n\r\n  const handleClick = () => {\r\n    navigate('/tracking'); // Update with your tracking page path\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setIsClosed(true);\r\n    setShowPopup(false);\r\n  };\r\n\r\n  return (\r\n    showPopup && !isClosed ? (\r\n      <div className=\"scroll-popup\">\r\n        <button className=\"close-button\" onClick={handleClose}>Ã—</button>\r\n        <p>Want to find out how sustainable you are?</p>\r\n        <button onClick={handleClick} className=\"popup-button\">Visit our tracking page</button>\r\n      </div>\r\n    ) : null\r\n  );\r\n};\r\n\r\nexport default ScrollPopup;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACjD,MAAMW,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI,CAACH,QAAQ,IAAII,MAAM,CAACC,OAAO,GAAG,GAAG,EAAE;MAAE;MACvCN,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,MAAM;MACLA,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAEDP,SAAS,CAAC,MAAM;IACdY,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEH,YAAY,CAAC;IAC/C,OAAO,MAAM;MACXC,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAEJ,YAAY,CAAC;IACpD,CAAC;EACH,CAAC,EAAE,CAACH,QAAQ,CAAC,CAAC;EAEd,MAAMQ,WAAW,GAAGA,CAAA,KAAM;IACxBN,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;EACzB,CAAC;EAED,MAAMO,WAAW,GAAGA,CAAA,KAAM;IACxBR,WAAW,CAAC,IAAI,CAAC;IACjBF,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,OACED,SAAS,IAAI,CAACE,QAAQ,gBACpBL,OAAA;IAAKe,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BhB,OAAA;MAAQe,SAAS,EAAC,cAAc;MAACE,OAAO,EAAEH,WAAY;MAAAE,QAAA,EAAC;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjErB,OAAA;MAAAgB,QAAA,EAAG;IAAyC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAChDrB,OAAA;MAAQiB,OAAO,EAAEJ,WAAY;MAACE,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAuB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpF,CAAC,GACJ,IAAI;AAEZ,CAAC;AAACnB,EAAA,CAtCID,WAAqB;EAAA,QAGRH,WAAW;AAAA;AAAAwB,EAAA,GAHxBrB,WAAqB;AAwC3B,eAAeA,WAAW;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}