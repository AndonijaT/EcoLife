{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andonija\\\\apps\\\\git\\\\EcoLife\\\\ecolife\\\\src\\\\pages\\\\QuotesSection.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './QuotesSection.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialQuotes = [{\n  text: \"The greatest threat to our planet is the belief that someone else will save it.\",\n  author: \"Robert Swan\",\n  isEditable: false\n}, {\n  text: \"We do not inherit the Earth from our ancestors; we borrow it from our children.\",\n  author: \"Native American Proverb\",\n  isEditable: false\n}, {\n  text: \"Sustainability is no longer about doing less harm. It's about doing more good.\",\n  author: \"Jochen Zeitz\",\n  isEditable: false\n}];\nconst QuotesSection = () => {\n  _s();\n  const [quotes, setQuotes] = useState(() => {\n    const savedQuotes = localStorage.getItem('quotes');\n    return savedQuotes ? JSON.parse(savedQuotes) : initialQuotes;\n  });\n  const [newQuote, setNewQuote] = useState('');\n  const [newAuthor, setNewAuthor] = useState('');\n  useEffect(() => {\n    localStorage.setItem('quotes', JSON.stringify(quotes));\n  }, [quotes]);\n  const handleAddQuote = () => {\n    if (newQuote && newAuthor) {\n      const newQuoteObject = {\n        text: newQuote,\n        author: newAuthor,\n        isEditable: true\n      };\n      setQuotes([...quotes, newQuoteObject]);\n      setNewQuote('');\n      setNewAuthor('');\n    } else {\n      alert(\"Please fill in both the quote and the author fields.\");\n    }\n  };\n  const handleDeleteQuote = index => {\n    const updatedQuotes = quotes.filter((_, i) => i !== index);\n    setQuotes(updatedQuotes);\n  };\n  const handleEditQuote = index => {\n    const quoteToEdit = quotes[index];\n    const newText = prompt(\"Edit the quote text:\", quoteToEdit.text);\n    const newAuthor = prompt(\"Edit the author:\", quoteToEdit.author);\n    if (newText && newAuthor) {\n      const updatedQuotes = quotes.map((quote, i) => i === index ? {\n        ...quote,\n        text: newText,\n        author: newAuthor\n      } : quote);\n      setQuotes(updatedQuotes);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quotes-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Inspirational Quotes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quotes-list\",\n      children: quotes.map((quote, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quote-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\\"\", quote.text, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"- \", quote.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), quote.isEditable && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit-btn\",\n            onClick: () => handleEditQuote(index),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-btn\",\n            onClick: () => handleDeleteQuote(index),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-quote-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter quote\",\n        value: newQuote,\n        onChange: e => setNewQuote(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter author\",\n        value: newAuthor,\n        onChange: e => setNewAuthor(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddQuote,\n        children: \"Add Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(QuotesSection, \"y71E+01jCP29qrVfRt5AeeaaMZk=\");\n_c = QuotesSection;\nexport default QuotesSection;\nvar _c;\n$RefreshReg$(_c, \"QuotesSection\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","initialQuotes","text","author","isEditable","QuotesSection","_s","quotes","setQuotes","savedQuotes","localStorage","getItem","JSON","parse","newQuote","setNewQuote","newAuthor","setNewAuthor","setItem","stringify","handleAddQuote","newQuoteObject","alert","handleDeleteQuote","index","updatedQuotes","filter","_","i","handleEditQuote","quoteToEdit","newText","prompt","map","quote","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/Andonija/apps/git/EcoLife/ecolife/src/pages/QuotesSection.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './QuotesSection.css'; \r\n\r\ninterface Quote {\r\n  text: string;\r\n  author: string;\r\n  isEditable: boolean; \r\n}\r\n\r\nconst initialQuotes: Quote[] = [\r\n  { text: \"The greatest threat to our planet is the belief that someone else will save it.\", author: \"Robert Swan\", isEditable: false },\r\n  { text: \"We do not inherit the Earth from our ancestors; we borrow it from our children.\", author: \"Native American Proverb\", isEditable: false },\r\n  { text: \"Sustainability is no longer about doing less harm. It's about doing more good.\", author: \"Jochen Zeitz\", isEditable: false }\r\n];\r\n\r\nconst QuotesSection: React.FC = () => {\r\n  const [quotes, setQuotes] = useState<Quote[]>(() => {\r\n    const savedQuotes = localStorage.getItem('quotes');\r\n    return savedQuotes ? JSON.parse(savedQuotes) : initialQuotes;\r\n  });\r\n\r\n  const [newQuote, setNewQuote] = useState('');\r\n  const [newAuthor, setNewAuthor] = useState('');\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('quotes', JSON.stringify(quotes));\r\n  }, [quotes]);\r\n\r\n  const handleAddQuote = () => {\r\n    if (newQuote && newAuthor) {\r\n      const newQuoteObject: Quote = { text: newQuote, author: newAuthor, isEditable: true };\r\n      setQuotes([...quotes, newQuoteObject]);\r\n      setNewQuote('');\r\n      setNewAuthor('');\r\n    } else {\r\n      alert(\"Please fill in both the quote and the author fields.\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteQuote = (index: number) => {\r\n    const updatedQuotes = quotes.filter((_, i) => i !== index);\r\n    setQuotes(updatedQuotes);\r\n  };\r\n\r\n  const handleEditQuote = (index: number) => {\r\n    const quoteToEdit = quotes[index];\r\n    const newText = prompt(\"Edit the quote text:\", quoteToEdit.text);\r\n    const newAuthor = prompt(\"Edit the author:\", quoteToEdit.author);\r\n\r\n    if (newText && newAuthor) {\r\n      const updatedQuotes = quotes.map((quote, i) =>\r\n        i === index ? { ...quote, text: newText, author: newAuthor } : quote\r\n      );\r\n      setQuotes(updatedQuotes);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"quotes-section\">\r\n      <h2>Inspirational Quotes</h2>\r\n      <div className=\"quotes-list\">\r\n        {quotes.map((quote: Quote, index: number) => (\r\n          <div key={index} className=\"quote-card\">\r\n            <p>\"{quote.text}\"</p>\r\n            <p>- {quote.author}</p>\r\n            {quote.isEditable && (\r\n              <div className=\"buttons\">\r\n                <button className=\"edit-btn\" onClick={() => handleEditQuote(index)}>Edit</button>\r\n                <button className=\"delete-btn\" onClick={() => handleDeleteQuote(index)}>Delete</button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"add-quote-form\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter quote\"\r\n          value={newQuote}\r\n          onChange={(e) => setNewQuote(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter author\"\r\n          value={newAuthor}\r\n          onChange={(e) => setNewAuthor(e.target.value)}\r\n        />\r\n        <button onClick={handleAddQuote}>Add Quote</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuotesSection;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}